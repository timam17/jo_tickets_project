// Fonction qui prend une chaîne d'arguments non séparée et la divise en tokens
module.exports = function (inputString) {
  if (Array.isArray(inputString)) {
    return inputString.map(element => typeof element !== 'string' ? String(element) : element);
  }

  inputString = inputString.trim();

  let index = 0;
  let previousChar = null;
  let currentChar = null;
  let delimiter = null; // Pour suivre si on est dans des guillemets
  const resultArgs = [];

  // Itérer à travers chaque caractère de la chaîne d'entrée
  for (let i = 0; i < inputString.length; i++) {
    previousChar = currentChar;
    currentChar = inputString.charAt(i);

    // On sépare par espace sauf si on est dans des guillemets
    if (currentChar === ' ' && !delimiter) {
      if (previousChar !== ' ') {
        index++;
      }
      continue;
    }

    // On ne divise pas si on est dans des guillemets simples ou doubles
    if (currentChar === delimiter) {
      delimiter = null;
    } else if ((currentChar === "'" || currentChar === '"') && !delimiter) {
      delimiter = currentChar;
    }

    // Si l'argument n'existe pas encore dans le tableau, on l'initialise
    if (!resultArgs[index]) resultArgs[index] = '';
    resultArgs[index] += currentChar;
  }

  return resultArgs;
}
